<?xml version="1.0" encoding="utf-8"?>
<feed xml:lang="en-US" xmlns:media="http://www.isaacliu.info" xmlns="http://www.w3.org/2005/Atom">
<id>tag:isaacliu.info,2009:/blog</id>
  <link href="http://isaacliu.info/blog" rel="alternate" type="text/html" />
  <link href="http://isaacliu.info/blog/xml" rel="self" type="application/atom+xml" />
           
  <title>My Blog Feed</title>
  <subtitle>Isaac Liu's Blog Feed</subtitle>
  <link href="http://isaacliu.info/tumblog/" rel="self" />
  <link href="http://isaacliu.info/" />
  <updated>2010-09-16T10:13:44-07:00</updated>
  <author>
    <name>Isaac Liu</name>
    <email></email>
  </author>
  <id>http://isaacliu.info/</id>
  
  <entry>
    <title>RoR and Facebook With fb_graph</title>
    <link href="/blog/201009/ror-and-facebook-with-fb-graph.html" />
    <id>tag:isaacliu.info,2010-09-16:1284663600</id>
    <updated>2010-09-16T19:00:00Z</updated>
    <content type="html">&lt;p&gt;While working on our church website, integrating with our church&amp;#8217;s facebook fan page became a desired feature so our site maintenance team can just add an event on facebook and have it synced up to our website.&lt;/p&gt;
&lt;p&gt;After learning about the &lt;a href=&quot;http://developers.facebook.com/docs/api/&quot;&gt;facebook graph api&lt;/a&gt;, I was planning to write a library for ruby that sent out the queries and parsed the results to display on our site. However, I found the &lt;a href=&quot;http://github.com/nov/fb_graph&quot;&gt;fb_graph gem&lt;/a&gt; written by Nov Matake and decided to try it out. The experience was extremely positive and Nov was very helpful and prompt in responding to my emails. Here&amp;#8217;s how I integrated the facebook graph api into a ruby on rails app:&lt;/p&gt;
&lt;p&gt;First things first, lets create a new rails application, and we&amp;#8217;ll name it &amp;#8220;fb_graph_app&amp;#8221;.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; % rails new fb_graph_app
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;With Rails 3.0 it&amp;#8217;s easy to install the required gems. We&amp;#8217;ll go into the Gemfile specify that we need the fb_graph gem:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Gemfile &lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt; source &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;http://rubygems.org&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt; gem &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;rails&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;3.0.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Bundle edge Rails instead:&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# gem 'rails', :git =&amp;gt; 'git://github.com/rails/rails.git'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt; gem &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sqlite3-ruby&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;sy&quot;&gt;:require&lt;/span&gt; =&amp;gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sqlite3&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#--------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Adding the following line tells rails we need the fb_graph gem installed&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#--------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;14&lt;/span&gt; gem &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fb_graph&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;15&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#....truncated the remaining file...&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Once that&amp;#8217;s saved we can install the required gems with the following command:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; % bundle install
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Now that fb_graph is installed we can start making facebook graph API! Lets first create a controller and get modify the home page. We will first generate a simple controller called home with one action called index:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; % rails g controller home index
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;With that command the controller and view for &amp;#8220;home&amp;#8221; will be generated. Now we can map the root of the server to this action by changing the config/route.rb file:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#config/routes.tb&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;FbGraphApp&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;Application&lt;/span&gt;.routes.draw &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#...truncated commented stuff...&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# You can have the root of your site routed with &amp;quot;root&amp;quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# just remember to delete public/index.html.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt; root &lt;span class=&quot;sy&quot;&gt;:to&lt;/span&gt; =&amp;gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;home#index&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# See how all your routes lay out with &amp;quot;rake routes&amp;quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# This is a legacy wild controller route that's not recommended for RESTful applications.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Note: This route will make all actions in every controller accessible via GET requests.&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# match ':controller(/:action(/:id(.:format)))'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Now log into your facebook account and register for a new app &lt;a href=&quot;http://www.facebook.com/developers/apps.php&quot;&gt;here&lt;/a&gt;. Using the app_id, API key and application secret we are going to create a config file facebook.yml.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#config/facebook.yml&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;ke&quot;&gt;development&lt;/span&gt;: &lt;span class=&quot;v&quot;&gt;&amp;amp;defaults&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt;   &lt;span class=&quot;ke&quot;&gt;app_id&lt;/span&gt;: &lt;span class=&quot;c&quot;&gt;#your app_id&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;   &lt;span class=&quot;ke&quot;&gt;client_id&lt;/span&gt;: &lt;span class=&quot;c&quot;&gt;#your api key&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt;   &lt;span class=&quot;ke&quot;&gt;client_secret&lt;/span&gt;: &lt;span class=&quot;c&quot;&gt;#your client secret&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt;   &lt;span class=&quot;ke&quot;&gt;perms&lt;/span&gt;: &lt;span class=&quot;s&quot;&gt;offline_access,manage_pages&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt;   &lt;span class=&quot;ke&quot;&gt;page_id&lt;/span&gt;: &lt;span class=&quot;c&quot;&gt;#the facebook page id that you wish you pull events from&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;ke&quot;&gt;test&lt;/span&gt;:
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;cv&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;: &lt;span class=&quot;gv&quot;&gt;*defaults&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;ke&quot;&gt;production&lt;/span&gt;:
&lt;span class=&quot;no&quot;&gt;13&lt;/span&gt;   &lt;span class=&quot;cv&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;: &lt;span class=&quot;gv&quot;&gt;*defaults&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;For this demo purpose we&amp;#8217;re just going to pull the events from a facebook &amp;#8220;Page&amp;#8221;. Our church has the facebook page &lt;a href=&quot;http://www.facebook.com/developers/apps.php#!/pages/Cupertino-CA/Good-Shepherd-Christian-Community/187141722947?ref=ts&quot;&gt;here&lt;/a&gt;, so i&amp;#8217;ll grab the page_id from the link and insert in facebook.yml for the page_id. With that setup we can now go into our home controller to add in the calls to grab events. So lets add the following code in our home controller:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#app/controllers/home_controller.rb&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;cl&quot;&gt;HomeController&lt;/span&gt; &amp;lt; &lt;span class=&quot;co&quot;&gt;ApplicationController&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;#Load facebook.yml info&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt;     config = &lt;span class=&quot;co&quot;&gt;YAML&lt;/span&gt;::load(&lt;span class=&quot;co&quot;&gt;File&lt;/span&gt;.open(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;co&quot;&gt;RAILS_ROOT&lt;/span&gt;&lt;span class=&quot;idl&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;/config/facebook.yml&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;));
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#Instantiate a new application with our app_id so we can get an access token&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt;     my_app = &lt;span class=&quot;co&quot;&gt;FbGraph&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;Application&lt;/span&gt;.new(config[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;][&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;app_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]);
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt;     acc_tok = my_app.get_access_token(config[&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;][&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;client_secret&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;]);
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#Instantiate a new page class using the page_id specified &lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;iv&quot;&gt;@page&lt;/span&gt; = &lt;span class=&quot;co&quot;&gt;FbGraph&lt;/span&gt;::&lt;span class=&quot;co&quot;&gt;Page&lt;/span&gt;.new(config.&lt;span class=&quot;er&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;][&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;page_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class=&quot;sy&quot;&gt;:access_token&lt;/span&gt; =&amp;gt; acc_tok).fetch;
&lt;span class=&quot;no&quot;&gt;13&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#Grab the events from the page &lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;15&lt;/span&gt;     events = &lt;span class=&quot;iv&quot;&gt;@page&lt;/span&gt;.events.sort_by{|e| e.start_time};
&lt;span class=&quot;no&quot;&gt;16&lt;/span&gt;     
&lt;span class=&quot;no&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#Get the events that are upcoming&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;18&lt;/span&gt;     &lt;span class=&quot;iv&quot;&gt;@upcoming_events&lt;/span&gt; = events.find_all{|e| e.start_time &amp;gt;= &lt;span class=&quot;co&quot;&gt;Time&lt;/span&gt;.now};
&lt;span class=&quot;no&quot;&gt;19&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;20&lt;/strong&gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#Get the events that have passed&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;21&lt;/span&gt;     &lt;span class=&quot;iv&quot;&gt;@past_events&lt;/span&gt; = events.find_all{|e| e.start_time &amp;lt; &lt;span class=&quot;co&quot;&gt;Time&lt;/span&gt;.now}.reverse;
&lt;span class=&quot;no&quot;&gt;22&lt;/span&gt;   &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The above code first reads the facebook.yml file to obtain the facebook app information (line 5). It then uses the information to obtain an access token (line 7,8) so we can access events and more information &lt;strong&gt;[Thanks Nov for pointing this out, for the sake of this example you don&amp;#8217;t need an access token because all information accessed from facebook is public. However, if you want to access information that&amp;#8217;s not public (i.e. who rsvped for an event) then you need an access token]&lt;/strong&gt;. Once an access token is obtained, we can use it access information from the page. We store the page information in an instance variable so we can display in the view later. We also use the connections provided by fb_graph to access the events that are posted in for that page (line 15). Once we get the events we sort it by the start time. Then we create 2 instance variables that store the upcoming events and the events that have already passed (line 18 and 21).&lt;/p&gt;
&lt;p&gt;Once we have the event information we can display it in our view.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- app/views/home/index.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Home#index&lt;span class=&quot;ta&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Find me in app/views/home/index.html.erb&lt;span class=&quot;ta&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt; 
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;%= @page.name %&amp;gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;storng&amp;gt;&lt;/span&gt;Upcoming Events:&lt;span class=&quot;ta&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;hr&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;% @upcoming_events.each do |event| %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;&amp;lt;%= event.name %&amp;gt;&lt;/span&gt; - &lt;span class=&quot;c&quot;&gt;&amp;lt;%= event.start_time %&amp;gt;&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;storng&amp;gt;&lt;/span&gt;Past Events:&lt;span class=&quot;ta&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;hr&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;15&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;% @past_events.each do |event| %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;16&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;&amp;lt;%= event.name %&amp;gt;&lt;/span&gt; - &lt;span class=&quot;c&quot;&gt;&amp;lt;%= event.start_time %&amp;gt;&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;17&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;Now we can see the results by running the web server in rails using the following command:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; % rails server
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;By pointing your browser to &lt;em&gt;localhost:3000&lt;/em&gt; you should now see a simple page with your facebook page name and the events listed from your facebook page in your ruby on rails app! This is a very simple example of using fb_graph to access the facebook graph api to get data from facebook. To learn more about the facebook graph api see &lt;a href=&quot;http://developers.facebook.com/docs/api&quot;&gt;here&lt;/a&gt;. Nov Matake also has a sample facebook app and documentation of the fb_graph api with some examples &lt;a href=&quot;http://github.com/nov/fb_graph&quot;&gt;here&lt;/a&gt;. Note that is a simplified example, and there are several optimizations that could be done. I simply wanted a quick and easy tutorial to get people started with using the fb_graph gem. Hopefully this can help you integrate facebook into your next ruby on rails app!&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Zoom:1 IE Fix</title>
    <link href="/blog/201004/zoom-1-ie-fix.html" />
    <id>tag:isaacliu.info,2010-04-28:1272470829</id>
    <updated>2010-04-28T16:07:09Z</updated>
    <content type="html">&lt;p&gt;After playing around with the layout and jQuery for a while, Internet Explorer 8 was really pissing me off. Everything that worked in Firefox, Safari Chrome didn&amp;#8217;t work properly in Internet Explorer 8. I wonder why that browser is still around&amp;#8230; Anyhow, I later found a quick solution that can fix most of the IE problems, and that&amp;#8217;s the zoom:1 fix! All you need to do is add the following line to your css:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ty&quot;&gt;div&lt;/span&gt; {
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;ke&quot;&gt;zoom&lt;/span&gt;: &lt;span class=&quot;fl&quot;&gt;1&lt;/span&gt;; 
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; }
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;And just that like, every problem that I was having disappeared. I can&amp;#8217;t really explain why, and apparently neither can &lt;a href=&quot;http://www.bennadel.com/blog/1354-The-Power-Of-ZOOM-Fixing-CSS-Issues-In-Internet-Explorer.htm&quot;&gt;this blogger&lt;/a&gt;. But the point is, use it and save yourself some trouble. Microsoft, when are you going to figure it out&amp;#8230;?&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Webby Tricks - JQuery</title>
    <link href="/blog/201004/webby-tricks-jquery.html" />
    <id>tag:isaacliu.info,2010-04-26:1272300292</id>
    <updated>2010-04-26T16:44:52Z</updated>
    <content type="html">&lt;p&gt;Since I&amp;#8217;ve had such a positive experience with &lt;a href=&quot;http://webby.rubyforge.org/&quot;&gt;Webby&lt;/a&gt;, I&amp;#8217;ve decided to blog a little about some stuff I&amp;#8217;ve figured out when using &lt;em&gt;webby&lt;/em&gt;. I know there are some amount of tutorial I&amp;#8217;ve found only for Webby, so I&amp;#8217;ll try to not repeat a lot of them. When I constructed this blog using webby, I wanted the dates to be in the format of &lt;em&gt;&amp;#8220;2 minutes ago&amp;#8221;&lt;/em&gt; or &lt;em&gt;&amp;#8220;1 month ago,&amp;#8221;&lt;/em&gt; instead of absolute dates. This cannot be achieved by using webby alone, since these dates can only be changed when the website is build. Thus, a little java script magic is needed. &lt;a href=&quot;http://jquery.com/&quot;&gt;JQuery&lt;/a&gt; is a javascript library that allows plugins and has several AJAX functions. In particular, I&amp;#8217;m using the &lt;a href=&quot;http://timeago.yarp.com/&quot;&gt;Timeago&lt;/a&gt; plugin for JQuery. What this javascript does is turn any date you wish on your page into the &amp;#8220;timeago&amp;#8221; format. It also auto updates itself, so it&amp;#8217;s perfect to be used with webby. First you want to follow the links above and download both the plugin and JQuery (go ahead and get the min version). In your main layout page (in the &lt;em&gt;layouts&lt;/em&gt; folder), add the following lines between the &amp;lt;head&amp;gt; tags:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;/scripts/jquery.min.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;text/javascript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;/scripts/jquery.timeago.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;text/javascript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;text/javascript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;4&lt;/span&gt;   // initialize plugin code
&lt;span class=&quot;no&quot;&gt;5&lt;/span&gt;   jQuery(document).ready(function() {
&lt;span class=&quot;no&quot;&gt;6&lt;/span&gt;   jQuery(&amp;quot;abbr.timeago&amp;quot;).timeago();
&lt;span class=&quot;no&quot;&gt;7&lt;/span&gt;   });
&lt;span class=&quot;no&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;When using webby, I created a &lt;em&gt;scripts&lt;/em&gt; folder in my &lt;em&gt;contents&lt;/em&gt; folder to hold my javascripts. That&amp;#8217;s why the src of the &amp;lt;scripts&amp;gt; tag is &lt;em&gt;/scripts/jquery.*&lt;/em&gt;. After doing this, then the javascript will find all the tags with the following format:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;timeago&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;2008-07-17T09:24:17Z&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;July 17, 2008&lt;span class=&quot;ta&quot;&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;into this:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;timeago&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;July 17, 2008&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;about a year ago&lt;span class=&quot;ta&quot;&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;which will yields the following: &lt;strong&gt;&lt;abbr class=&quot;timeago&quot; title=&quot;2008-07-17T09:24:17Z&quot;&gt;July 17, 2008&lt;/abbr&gt;&lt;/strong&gt;. Notice the time format in the &amp;lt;abbr&amp;gt; tag must be in an &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO8691&lt;/a&gt; timestamp. When using &lt;em&gt;webby&lt;/em&gt;, since you can use the erb filter, there are several ways to turn dates into the correct format. Here I show one way i used:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;&amp;lt;%&lt;/span&gt;  recent = &lt;span class=&quot;iv&quot;&gt;@pages&lt;/span&gt;.find(
&lt;span class=&quot;no&quot;&gt; 2&lt;/span&gt;        &lt;span class=&quot;sy&quot;&gt;:limit&lt;/span&gt; =&amp;gt; &lt;span class=&quot;i&quot;&gt;6&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt; 3&lt;/span&gt;        &lt;span class=&quot;sy&quot;&gt;:content_type&lt;/span&gt; =&amp;gt; &lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;tumblog&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt; 4&lt;/span&gt;        &lt;span class=&quot;sy&quot;&gt;:sort_by&lt;/span&gt; =&amp;gt; &lt;span class=&quot;sy&quot;&gt;:created_at&lt;/span&gt;,
&lt;span class=&quot;no&quot;&gt; 5&lt;/span&gt;        &lt;span class=&quot;sy&quot;&gt;:reverse&lt;/span&gt; =&amp;gt; &lt;span class=&quot;pc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 6&lt;/span&gt;    )
&lt;span class=&quot;no&quot;&gt; 7&lt;/span&gt;    recent.each &lt;span class=&quot;r&quot;&gt;do&lt;/span&gt; |e| &lt;span class=&quot;idl&quot;&gt;-%&amp;gt;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;no&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;&amp;lt;%=&lt;/span&gt; link_to_page(e); &lt;span class=&quot;idl&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;ta&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;[ &lt;span class=&quot;ta&quot;&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;timeago&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;an&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;&amp;lt;%=&lt;/span&gt; e.created_at.utc.strftime(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;%Y-%m-%dT%H:%M:%SZ&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;idl&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;&amp;lt;%=&lt;/span&gt; e.created_at.strftime(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;%b %d, %Y&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;idl&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt; ]&lt;span class=&quot;ta&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class=&quot;ta&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt; &lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;r&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;idl&quot;&gt;-%&amp;gt;&lt;/span&gt;&lt;/span&gt;  
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;The above code is what I used for the right column &lt;em&gt;recent entries&lt;/em&gt; section. I find all pages that are blog entries, and print out the linke and publish date. In particular, I used the following code to turn webby blog date format to the correct timestamp format. As you can see, all the dates on the right column are parsed into the &amp;#8220;timeago&amp;#8221; format.&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;il&quot;&gt;&lt;span class=&quot;idl&quot;&gt;&amp;lt;%=&lt;/span&gt; e.created_at.utc.strftime(&lt;span class=&quot;s&quot;&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;%Y-%m-%dT%H:%M:%SZ&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;idl&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;As usual, all the source code for this website can be found in my &lt;a href=&quot;http://github.com/iliu/My-Site&quot;&gt;github&lt;/a&gt; repository. Feel free to check it out and play with it.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Birthday Freebies!</title>
    <link href="/blog/201004/birthday-freebies.html" />
    <id>tag:isaacliu.info,2010-04-25:1272210873</id>
    <updated>2010-04-25T15:54:33Z</updated>
    <content type="html">&lt;p&gt;My wife and I have the exact same birthday. So every year around this time I start looking for free stuff for our birthdays. Last year was perfect, because Disneyland was giving free admission on your birthday, so my wife and I gladly got to go to Disneyland together, both for free =D. This year although Disneyland isn&amp;#8217;t free on birthdays anymore, there are still a lot of places that offer free stuff on birthdays! This day is becoming the day my wife and I go around and get free stuff! Here are some that I&amp;#8217;ve used:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.baskinrobbins.com/bdayclub/RegisterInfo1.aspx&quot;&gt;Baskin Robins&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.coldstonecreamery.com/mycs/myCS_pub_home.aspx?ReturnUrl=%2fmycs%2fmyCS_my_bday_acct.aspx&quot;&gt;Cold Stones&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.blackangus.com/PrimeClub.htm&quot;&gt;Black Angus free steak dinner&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.buffet.com/eclub&quot;&gt;Home Town Buffet&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.redlobster.com/club/&quot;&gt;Red Lobster&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.redrobin.com/eclub/default.aspx?AspxAutoDetectCookieSupport=1&quot;&gt;Red Robin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can definitely find more online, or you can go &lt;a href=&quot;http://www.frugalliving.tv/free-stuff/birthday-freebies.html&quot;&gt;here&lt;/a&gt;. Please post some other good ones if you know of any.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Crawling up the Ranks</title>
    <link href="/blog/201004/crawling-up-the-ranks.html" />
    <id>tag:isaacliu.info,2010-04-23:1272057410</id>
    <updated>2010-04-23T21:16:50Z</updated>
    <content type="html">&lt;p&gt;Finally, I&amp;#8217;m back at the first hit when you google &amp;#8220;isaac liu&amp;#8221;. Because of all the webhost changing and redesigning of my page, my page rank started dropping, until eventually my site completely disappeared from google search when querying &amp;#8220;isaac liu&amp;#8221;! I did some researching and found out that by using the &lt;em&gt;&amp;lt; meta refresh = &amp;quot;&amp;quot; &amp;gt;&lt;/em&gt; tag to do redirection, my page rank took a penalty, and maybe even prevented the google crawler to index my site. This is because normal spam sites use this method to redirect people to their spam sites. Thus, I went out to find how to do redirection the correct way, which was using 301 permanent move. What that means is, the http code that&amp;#8217;s sent back to the requesting client should be 301, which means &amp;#8220;permanently moved site.&amp;#8221; The &lt;em&gt;&amp;lt; meta refresh=&amp;quot;&amp;quot; &amp;gt;&lt;/em&gt; method sends back the code 200, which means &amp;#8220;Request OK,&amp;#8221; and then later does the redirection. That is extremely not search engine friendly. To change this required tweaking of the .htaccess file on my web host, which is using the UC Berkeley EECS department&amp;#8217;s webhost. If your curious, i added the following code to my .htaccess file:&lt;/p&gt;
&lt;div class=&quot;CodeRay&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;no&quot;&gt;1&lt;/span&gt; RewriteEngine on
&lt;span class=&quot;no&quot;&gt;2&lt;/span&gt; RewriteRule  ^index\.html$  /~liuisaac/site/ [R=301,L]
&lt;span class=&quot;no&quot;&gt;3&lt;/span&gt; RewriteRule  ^$  /~liuisaac/site/ [R=301,L]
&lt;/pre&gt;
&lt;/div&gt;&lt;p&gt;This uses the Apache mod_rewrite engine to rewrite all incoming requests to &lt;em&gt;index.html&lt;/em&gt; (line 2 and 3) to the &lt;em&gt;&amp;#8220;site&amp;#8221;&lt;/em&gt; subdirectory. Now all requests will be forwarded and the header message sent back will be 301 (specified by &lt;em&gt;R=301&lt;/em&gt; ), which is search engine friendly. Low and behold, I am back atop the google search for &amp;#8220;isaac liu&amp;#8221;! If you are using &lt;em&gt;&amp;lt; meta refresh=&amp;quot;&amp;quot; &amp;gt;&lt;/em&gt; to do redirection, and don&amp;#8217;t know why your page isn&amp;#8217;t showing up on google, this might be the reason! A more indepth tutorial on mod_rewrite can be found &lt;a href=&quot;http://httpd.apache.org/docs/2.0/mod/mod_rewrite.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Welcome Layton!</title>
    <link href="/blog/201004/welcome-layton.html" />
    <id>tag:isaacliu.info,2010-04-20:1271788222</id>
    <updated>2010-04-20T18:30:22Z</updated>
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/photos/bigby_layton.jpg&quot; title=&quot;Welcome Layton!&quot; alt=&quot;Welcome Layton!&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;We just got a new puppy! The picture shows me holding our new baby while our elder one Bigby, the cat, is being introduced to him. Layton is a Labador Terrier mix. He&amp;#8217;s only 3 months old and was just rescued from Taiwan this weekend! He was about to be sent to a foster home before we picked him up. We named him Layton after Professor Layton from Nintendo DS. Hopefully you&amp;#8217;re as smart as him Layton!&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Lots to Learn...</title>
    <link href="/blog/201004/lots-to-learn-dot.html" />
    <id>tag:isaacliu.info,2010-04-18:1271574578</id>
    <updated>2010-04-18T00:09:38-07:00</updated>
    <content type="html">&lt;p&gt;&lt;em&gt;Webby&lt;/em&gt; turned out to be very addicting&amp;#8230; It&amp;#8217;s certainly as powerful as I imagined, with lots of room to play with. However, I haven&amp;#8217;t used &lt;em&gt;ruby&lt;/em&gt; in a while, so it&amp;#8217;s time to remember the syntax of ruby. I also learned to use &lt;em&gt;partials&lt;/em&gt; in my layout, so i can further separate content and layout. This is progressing along fairly nicely&amp;#8230;&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Lots to Do...</title>
    <link href="/blog/201004/lots-to-do-dot.html" />
    <id>tag:isaacliu.info,2010-04-17:1271490310</id>
    <updated>2010-04-17T00:45:10-07:00</updated>
    <content type="html">&lt;p&gt;I have just setup the main frame of the site, and added a little personal touch to it so at least people know who&amp;#8217;s site this is. There is still plenty of work to be done, but I&amp;#8217;ll take it one step at a time, and slowly migrate all the content from my previous site here. But I think this is enough to deploy.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m also trying to be more efficient when I&amp;#8217;m deploying the site, so I&amp;#8217;m trying out &lt;a href=&quot;http://git-scm.com/&quot;&gt;git&lt;/a&gt; + &lt;a href=&quot;http://webby.rubyforge.org/&quot;&gt;webby&lt;/a&gt;. I am going to keep all my source code and output folder in &lt;a href=&quot;http://github.com/iliu/My-Site&quot;&gt;github&lt;/a&gt;, then just do a repository clone on the server. To update I just need to pull updates from github on my server, and it&amp;#8217;s done! So far so good.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>Hello World - Webby</title>
    <link href="/blog/201004/hello-world.html" />
    <id>tag:isaacliu.info,2010-04-16:1271452399</id>
    <updated>2010-04-16T14:13:19-07:00</updated>
    <content type="html">&lt;p&gt;Is there a scalable way to create websites with only static pages? I don&amp;#8217;t want to continuously be adding html pages, or editing html pages&amp;#8230;&lt;/p&gt;
&lt;p&gt;The answer is Yes! I&amp;#8217;ve began experimenting with static web site generators (currently using &lt;a href=&quot;http://webby.rubyforge.org/&quot;&gt;Webby&lt;/a&gt;), and my new site will be the results of this experimentation. I hope for the following when I&amp;#8217;m experimenting with &lt;em&gt;Webby&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Separation of content and layout&lt;/li&gt;
	&lt;li&gt;To use newer markup languages (textile, markdown, haml &amp;#8230; )&lt;/li&gt;
	&lt;li&gt;All static pages when website is deployed&lt;/li&gt;
	&lt;li&gt;Easy to add content (or else i never will&amp;#8230;), preferably a blog like structure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It seems &lt;em&gt;Webby&lt;/em&gt; has it all. So it&amp;#8217;s time to dive in and see what I can do with it!&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <title>I Passed My Quals!</title>
    <link href="/blog/201004/i-passed-my-quals.html" />
    <id>tag:isaacliu.info,2010-04-12:1271123610</id>
    <updated>2010-04-12T18:53:30-07:00</updated>
    <content type="html">&lt;p&gt;Yup, as the title said, today I passed my qualifying exam for my Ph.D studies at Berkeley! Now all that&amp;#8217;s left is the thesis and thesis defense!! (like those are easy tasks&amp;#8230; -_-)&lt;/p&gt;</content>
  </entry>
  

 
</feed>
